{"version":3,"sources":["logo.svg","components/AccordionContext.jsx","utils/useDebounceFn.js","components/ItemContext.jsx","components/AccordionItem.jsx","components/AccordionTrigger.jsx","components/AccordionPanel.jsx","components/Accordion.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","setAccordionState","Provider","props","element","type","listener","options","useState","expandedPanels","Set","defaultExpandedPanels","easing","duration","notTransition","multipleExpanded","checkWindowResize","window","innerWidth","onOpen","onClose","accordionState","fn","delay","timer","useRef","useCallback","_val","current","clearTimeout","setTimeout","useDebounceFn","onResizeHandler","bind","addEvent","addEventListener","removeEvent","removeEventListener","value","children","setItemState","setTriggerAttributes","setPanelAttributes","setPanelStyles","renderFlgRef","renderFlgRefResize","renderFlgRefRoot","rootContext","useContext","accordionContext","isInitialExpanded","includes","panelIndex","randomID","Math","random","toString","slice","isExpanded","index","panelDOM","itemState","triggerAttributes","panelAttributes","height","getPanelHeight","visibility","boxSizing","overflow","transition","panelStyles","useEffect","has","panel","clientHeight","AccordionItem","Consumer","className","AccordionTrigger","context","itemExpanded","onClick","delete","add","icon","faMinus","faPlus","AccordionPanel","paneleElement","ref","style","Accordion","React","Children","map","child","i","cloneElement","overrideOptions","content","Object","assign","title","dangerouslySetInnerHTML","__html","detail","App","open","console","log","close","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fbee401.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, createContext, useEffect } from \"react\";\nimport { useDebounceFn } from \"../utils/useDebounceFn\";\n\nexport const Context = createContext({\n  setAccordionState: () => {},\n});\n\nconst Provider = (props) => {\n  const [accordionState, setAccordionState] = useState({\n    expandedPanels: new Set(),\n    defaultExpandedPanels: [],\n    easing: \"ease-out\",\n    duration: \".3s\",\n    notTransition: false,\n    multipleExpanded: true,\n    checkWindowResize: window.innerWidth,\n    onOpen: () => {},\n    onClose: () => {},\n  });\n\n  //パネルの高さを揃えるリサイズイベント\n  const windowResizePanelHeightRecalculation = () => {\n    setAccordionState((accordionState) => ({\n      ...accordionState,\n      checkWindowResize: window.innerWidth,\n    }));\n  };\n  //リサイズイベントを間引く処理\n  const [onResizeHandler] = useDebounceFn(\n    windowResizePanelHeightRecalculation,\n    500\n  );\n  //リサイズイベントを登録\n  const panelHeightRemoveEvent = attachEvent(\n    window,\n    \"resize\",\n    onResizeHandler.bind(this)\n  );\n  panelHeightRemoveEvent.addEvent()\n\n  return (\n    <Context.Provider\n      value={{\n        accordionState,\n        setAccordionState,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default Provider;\n\n\nfunction attachEvent(element, type, listener, options) {\n  return {\n    addEvent() {\n      element.addEventListener(type, listener, options);\n    },\n    removeEvent() {\n      element.removeEventListener(type, listener);\n    },\n  };\n}\n","/**\n* @see {@link https://chaika.hatenablog.com/entry/2020/01/20/080000}\n*/\n// useDebounceFn.js\nimport { useRef, useCallback } from 'react';\n\nexport const useDebounceFn = (fn, delay = 100) => {\n  const timer = useRef(null);\n\n  const dispatch = useCallback((_val) => {\n    timer.current && clearTimeout(timer.current);\n    timer.current = setTimeout(() => {\n      fn(_val);\n    }, delay);\n  }, [fn, delay, timer]);\n\n  return [dispatch];\n};\n\n","import React, {\n  useState,\n  createContext,\n  useEffect,\n  useRef,\n  useContext,\n} from \"react\";\nimport { Context as accordionContext } from \"./AccordionContext\";\n\n\nexport const Context = createContext({\n  setItemState: () => {},\n  setTriggerAttributes: () => {},\n  setPanelAttributes: () => {},\n  setPanelStyles: () => {},\n});\n\nexport const Provider = (props) => {\n  const renderFlgRef = useRef(false);\n  const renderFlgRefResize = useRef(false);\n  const renderFlgRefRoot = useRef(false);\n\n  const rootContext = useContext(accordionContext);\n\n  //初期化時にパネルを開くかフラグ\n  const isInitialExpanded = rootContext.accordionState[\n    \"defaultExpandedPanels\"\n  ].includes(props.panelIndex);\n\n  //ランダムなIDを生成\n  const randomID = Math.random().toString(36).slice(2);\n\n  //アイテムの状態\n  const [itemState, setItemState] = useState({\n    isExpanded: isInitialExpanded ? true : false,\n    index: props.panelIndex,\n    panelDOM: null,\n  });\n\n  //開閉時のコールバック関数をセット\n  const onOpen = rootContext.accordionState[\"onOpen\"];\n  const onClose = rootContext.accordionState[\"onClose\"];\n\n  //トリガーの状態管理\n  const [triggerAttributes, setTriggerAttributes] = useState({\n    \"aria-expanded\": itemState[\"isExpanded\"] ? true : false,\n    \"aria-controls\": `accordion-${itemState['index']}-${randomID}`,\n  });\n\n  //パネルの状態管理\n  const [panelAttributes, setPanelAttributes] = useState({\n    \"id\": `accordion-${itemState['index']}-${randomID}`,\n    \"aria-hidden\": itemState[\"isExpanded\"] ? false : true,\n  });\n\n  //パネルのスタイル\n  const [panelStyles, setPanelStyles] = useState({\n    height: itemState[\"isExpanded\"] ? getPanelHeight(itemState.panelDOM) : 0,\n    visibility: itemState[\"isExpanded\"] ? \"visible\" : \"hidden\",\n    boxSizing: \"border-box\",\n    overflow: \"hidden\",\n    transition: rootContext.accordionState.notTransition\n      ? \"\"\n      : `height ${rootContext.accordionState.duration} ${rootContext.accordionState.easing}, visibility ${rootContext.accordionState.duration}`,\n  });\n  \n  //アコーディオンの開閉状態が変更されたら発火\n  useEffect(() => {\n    // if(!itemState['panelEl']) return\n    if (renderFlgRef.current) {\n      //トリガー\n      setTriggerAttributes((triggerAttributes) => ({\n        ...triggerAttributes,\n        \"aria-expanded\": itemState[\"isExpanded\"] ? true : false,\n      }));\n\n      //パネル\n      setPanelAttributes((panelAttributes) => ({\n        ...panelAttributes,\n        \"aria-hidden\": itemState[\"isExpanded\"] ? false : true,\n      }));\n      setPanelStyles((panelStyles) => ({\n        ...panelStyles,\n        height: itemState[\"isExpanded\"]\n          ? getPanelHeight(itemState.panelDOM)\n          : 0,\n        visibility: itemState[\"isExpanded\"] ? \"visible\" : \"hidden\",\n      }));\n\n      //開閉時のコールバック関数実行\n      if (itemState[\"isExpanded\"]) {\n        onOpen(itemState.panelDOM);\n      } else {\n        onClose(itemState.panelDOM);\n      }\n\n    } else {\n      renderFlgRef.current = true;\n    }\n  }, [itemState[\"isExpanded\"]]);\n\n  //パネルDOM取得時に高さ調整\n  useEffect(() => {\n    // console.log('パネルDOM取得')\n    setPanelStyles((panelStyles) => ({\n      ...panelStyles,\n      height: itemState[\"isExpanded\"] ? getPanelHeight(itemState.panelDOM) : 0,\n      visibility: itemState[\"isExpanded\"] ? \"visible\" : \"hidden\",\n    }));\n    // console.log(rootContext.accordionState['expandedPanels'].has(itemState.index));\n  }, [itemState[\"panelDOM\"]]);\n\n  //multipleExpandedの処理\n  //falseは自分以外閉じる\n  useEffect(() => {\n    if (renderFlgRefRoot.current) {\n      if (rootContext.accordionState[\"expandedPanels\"].has(itemState.index)) {\n        setItemState((itemState) => ({\n          ...itemState,\n          isExpanded: true,\n        }));\n      } else {\n        setItemState((itemState) => ({\n          ...itemState,\n          isExpanded: false,\n        }));\n      }\n    } else {\n      renderFlgRefRoot.current = true;\n    }\n\n    // console.log(rootContext.accordionState['expandedPanels'].has(itemState.index));\n  }, [rootContext.accordionState[\"expandedPanels\"]]);\n\n  //開いているパネルの高さをwindowresize時に調整\n  useEffect(() => {\n    if (renderFlgRefResize.current) {\n      if(itemState[\"isExpanded\"]) {\n        setPanelStyles((panelStyles) => ({\n          ...panelStyles,\n          height: getPanelHeight(itemState.panelDOM)\n        }));\n      }\n    } else {\n      renderFlgRefResize.current = true;\n    }\n  }, [rootContext.accordionState[\"checkWindowResize\"]]);\n\n\n\n  return (\n    <Context.Provider\n      value={{\n        itemState,\n        setItemState,\n        triggerAttributes,\n        setTriggerAttributes,\n        panelAttributes,\n        setPanelAttributes,\n        panelStyles,\n        setPanelStyles,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nfunction getPanelHeight(panel) {\n  if (!panel) return;\n  const panelHeight = panel.children[0].clientHeight;\n\n  return panelHeight;\n}\n\n","import { Provider, Context } from \"./ItemContext\";\n\nconst AccordionItem = (props) => {\n  return (\n    <Provider panelIndex={props.panelIndex}>\n      <Context.Consumer>\n        {(options) => {\n          return (\n            <>\n              <div className=\"AccordionItem\">{props.children}</div>\n            </>\n          )\n        }}\n      </Context.Consumer>\n    </Provider>\n  );\n};\n\nexport default AccordionItem;\n","import React, {useState, useContext, useRef, useEffect} from 'react'\nimport { Provider, Context } from \"./ItemContext\";\nimport { Context as  accordionContext} from \"./AccordionContext\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst AccordionTrigger = (props) => {\n  const context = useContext(Context)\n  const rootContext = useContext(accordionContext)\n\n  //アコーディオンが開いているか？\n  const itemExpanded = context.itemState['isExpanded']\n  \n  const toggleAccordion = () => {\n\n    //アイテムの状態を変更\n    context.setItemState( itemState =>({\n      ...itemState,\n      isExpanded: itemExpanded ? false : true\n    }));\n\n    //開いているパネルのindexを保存\n    if(rootContext.accordionState['multipleExpanded']) {\n      itemExpanded ? \n        rootContext.accordionState['expandedPanels'].delete(context.itemState.['index']) :\n        rootContext.accordionState['expandedPanels'].add(context.itemState.['index'])\n      \n      rootContext.setAccordionState( accordionState =>({\n        ...accordionState,\n        expandedPanels: rootContext.accordionState['expandedPanels']\n      }));\n    } else {\n      rootContext.setAccordionState( accordionState =>({\n        ...accordionState,\n        //自身が開いている場合は閉じる\n        expandedPanels: itemExpanded ? new Set() : new Set([context.itemState.['index']])\n      }));\n      // console.log(rootContext.accordionState['expandedPanels'])\n    }\n\n   };\n\n\n  return (\n    <button className=\"AccordionTrigger\" type=\"button\" onClick={toggleAccordion} {...context.triggerAttributes}>\n      {props.children}\n      <FontAwesomeIcon icon={itemExpanded ? faMinus : faPlus} />\n    </button>\n  );\n}\n\nexport default AccordionTrigger;","import React, {useState, useContext, useRef, useEffect} from 'react'\nimport { Context } from \"./ItemContext\";\n\nconst AccordionPanel = (props) => {\n\n  const context = useContext(Context)\n  const paneleElement = useRef(null)\n\n\n\n  useEffect(() => {\n    //パネルのDOMを取得\n    context.setItemState( itemState =>({\n      ...itemState,\n      panelDOM: paneleElement.current\n    }));\n  }, []);\n\n  // console.log(paneleElement); \n\n  return (\n    <div ref={paneleElement} className=\"AccordionPanel\" style={context.panelStyles} {...context.panelAttributes}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default AccordionPanel;","import React, { useContext, useState, useRef } from \"react\";\nimport Provider, { Context } from \"./AccordionContext\";\n\nimport AccordionItem from \"./AccordionItem\";\nimport AccordionTrigger from \"./AccordionTrigger\";\nimport AccordionPanel from \"./AccordionPanel\";\n\nconst Accordion = (props) => {\n  const childrenWithProps = React.Children.map(props.children, (child, i) => {\n    // 各子要素をクローンしつつ index を渡す\n    // console.log(i)\n    return React.cloneElement(child, { panelIndex: i });\n  });\n\n  return (\n    <Provider>\n      <Context.Consumer>\n        {(options) => {\n          const overrideOptions = {\n            defaultExpandedPanels: !(typeof props.defaultExpandedPanels === \"undefined\")\n              ? props.defaultExpandedPanels\n              : options.accordionState.defaultExpandedPanels,\n            multipleExpanded: !(typeof props.multipleExpanded === \"undefined\")\n              ? props.multipleExpanded\n              : options.accordionState.multipleExpanded,\n            easing: !(typeof props.easing === \"undefined\")\n              ? props.easing\n              : options.accordionState.easing,\n            duration: !(typeof props.duration === \"undefined\")\n              ? props.duration\n              : options.accordionState.duration,\n            notTransition: !(typeof props.notTransition === \"undefined\")\n              ? props.notTransition\n              : options.accordionState.notTransition,\n            content: !(typeof props.content === \"undefined\")\n              ? props.content\n              : options.accordionState.content,\n            onOpen: !(typeof props.onOpen === \"undefined\")\n              ? props.onOpen\n              : options.accordionState.onOpen,\n            onClose: !(typeof props.onClose === \"undefined\")\n              ? props.onClose\n              : options.accordionState.onClose,\n          };\n          Object.assign(options.accordionState, overrideOptions || {});\n\n          return (\n            <>\n              {/* <div className=\"Accordion\">{childrenWithProps}</div> */}\n              <div className=\"Accordion\">\n                {options.accordionState.content.map((content, index) => {\n                  return (\n                    <AccordionItem panelIndex={index} key={index}>\n                      <div className=\"AccordionItem__header\">\n                        <AccordionTrigger>{content.title}</AccordionTrigger>\n                      </div>\n                      <AccordionPanel>\n                        <div\n                          className=\"AccordionPanel__content\"\n                          dangerouslySetInnerHTML={{\n                            __html: content.detail,\n                          }}\n                        ></div>\n                      </AccordionPanel>\n                    </AccordionItem>\n                  );\n                })}\n              </div>\n            </>\n          );\n        }}\n      </Context.Consumer>\n    </Provider>\n  );\n};\n\nexport default Accordion;\n","import React, {createContext, useState} from 'react'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Accordion from './components/Accordion';\nimport AccordionItem from './components/AccordionItem';\nimport AccordionTrigger from './components/AccordionTrigger';\nimport AccordionPanel from './components/AccordionPanel';\n\nimport ContextA from './components/contextSample/ContextA'\nimport ContextC from './components/contextSample/ContextC'\n\n\n\n\nfunction App() {\n\n  function open() {\n    console.log('開いた')\n  }\n  function close() {\n    console.log('閉じた')\n  }\n\n  const pokemon_1 = [\n    {\n      title: 'フシギダネ',\n      detail: 'うまれたときから せなかに しょくぶつの タネが あって すこしずつ おおきく そだつ。'\n    },\n    {\n      title: 'ヒトカゲ',\n      detail: 'うまれたときから しっぽに ほのおが ともっている。ほのおが きえたとき その いのちは おわって しまう。'\n    },\n    {\n      title: 'ゼニガメ',\n      detail: `<b>ながい</b> くびを こうらのなかに ひっこめるとき いきおいよく みずでっぽうを はっしゃする。<a href=\"\">リンク</a>`\n    }\n  ]\n\n  const pokemon_2 = [\n    {\n      title: 'チコリータ',\n      detail: 'あたまのハッパから ほのかに あまい かおりが ただよう。おとなしくて ひざしを あびるのが だいすき。'\n    },\n    {\n      title: 'ヒノアラシ',\n      detail: 'おくびょうで いつも からだを まるめている。おそわれると せなかの ほのおを もえあがらせ みをまもる。。'\n    },\n    {\n      title: 'ワニノコ',\n      detail: `はったつした あごは パワフルで なんでも かみくだいて しまうので おやのトレーナーでも ようちゅうい。`\n    }\n  ]\n\n\n  return (\n    <div className=\"App\">\n\n      {/* <ContextA>\n        <ContextC/>\n      </ContextA> */}\n\n\n      \n      <Accordion defaultExpandedPanels={[0]} multipleExpanded={true} content={pokemon_1} onOpen={open} onClose={close}>\n\n        {/* <AccordionItem>\n          <div className=\"AccordionItem__header\">\n            <AccordionTrigger>\n              フシギダネ\n            </AccordionTrigger>\n          </div>\n          <AccordionPanel>\n            <div className=\"AccordionPanel__content\">\n              うまれたときから せなかに しょくぶつの タネが あって すこしずつ おおきく そだつ。\n            </div>\n          </AccordionPanel>\n        </AccordionItem>\n\n        <AccordionItem>\n          <div className=\"AccordionItem__header\">\n            <AccordionTrigger>\n              ヒトカゲ\n            </AccordionTrigger>\n          </div>\n          <AccordionPanel>\n            <div className=\"AccordionPanel__content\">\n              うまれたときから しっぽに ほのおが ともっている。ほのおが きえたとき その いのちは おわって しまう。\n            </div>\n          </AccordionPanel>\n        </AccordionItem>\n\n        <AccordionItem>\n          <div className=\"AccordionItem__header\">\n            <AccordionTrigger>\n              ゼニガメ\n            </AccordionTrigger>\n          </div>\n          <AccordionPanel>\n            <div className=\"AccordionPanel__content\">\n              ながい くびを こうらのなかに ひっこめるとき いきおいよく みずでっぽうを はっしゃする。\n            </div>\n          </AccordionPanel>\n        </AccordionItem> */}\n\n      </Accordion>\n\n      <Accordion defaultExpandedPanels={[0]} multipleExpanded={false} content={pokemon_2} onOpen={open} onClose={close} />\n\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}